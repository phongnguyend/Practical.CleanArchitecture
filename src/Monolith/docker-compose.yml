version: "3.6"
services:
    db:
        image: "mcr.microsoft.com/mssql/server:2017-latest"
        ports:
            - "1434:1433"
        environment:
            SA_PASSWORD: "sqladmin123!@#"
            MSSQL_PID: "Developer"
            ACCEPT_EULA: "Y"
    rabbitmq:
        image: "rabbitmq:3-management"
        ports:
          - "5672:5672"
          - "15672:15672"
    mailhog:
        image: mailhog/mailhog
        ports: 
          - 1025:1025 # smtp server
          - 8025:8025 # web ui
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
    kafka:
        image: confluentinc/cp-kafka:latest
        depends_on:
          - zookeeper
        ports:
          - 9092:9092
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://host.docker.internal:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    migrator:
        image: classifiedads.migrator
        build:
          context: .
          dockerfile: ./ClassifiedAds.Migrator/Dockerfile
        depends_on:
          - db
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: ${ConnectionStrings__ClassifiedAds}
          CheckDependency__Enabled: "true"
          CheckDependency__Host: "db:1433"
    identityserver:
        image: classifiedads.identityserver
        build:
          context: .
          dockerfile: ./ClassifiedAds.IdentityServer/Dockerfile
        ports:
            - "9000:80"
        depends_on:
          - db
          - migrator
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: ${ConnectionStrings__ClassifiedAds}
          CookiePolicyOptions__IsEnabled: "true"
          CookiePolicyOptions__MinimumSameSitePolicy: "Lax"
          CookiePolicyOptions__Secure: "None"
          MessageBroker__Provider: ${MessageBroker__Provider}
          MessageBroker__RabbitMQ__HostName: ${MessageBroker__RabbitMQ__HostName}
          MessageBroker__Kafka__BootstrapServers: ${MessageBroker__Kafka__BootstrapServers}
          MessageBroker__AzureQueue__ConnectionString: ${MessageBroker__AzureQueue__ConnectionString}
    notificationserver:
        image: classifiedads.notificationserver
        build:
          context: .
          dockerfile: ./ClassifiedAds.NotificationServer/Dockerfile
        ports:
            - "9001:80"
        depends_on:
          - db
          - migrator
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: ${ConnectionStrings__ClassifiedAds}
    webapi:
        image: classifiedads.webapi
        build:
          context: .
          dockerfile: ./ClassifiedAds.WebAPI/Dockerfile
        ports:
            - "9002:80"
        depends_on:
          - db
          - migrator
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: ${ConnectionStrings__ClassifiedAds}
          IdentityServerAuthentication__Authority: "http://host.docker.internal:9000"
          IdentityServerAuthentication__RequireHttpsMetadata: "false"
          Storage__Provider: ${Storage__Provider}
          Storage__Local__Path: ${Storage__Local__Path}
          Storage__Azure__ConnectionString: ${Storage__Azure__ConnectionString}
          Storage__Azure__Container: ${Storage__Azure__Container}
          Storage__Amazon__AccessKeyID: ${Storage__Amazon__AccessKeyID}
          Storage__Amazon__SecretAccessKey: ${Storage__Amazon__SecretAccessKey}
          Storage__Amazon__BucketName: ${Storage__Amazon__BucketName}
          Storage__Amazon__RegionEndpoint: ${Storage__Amazon__RegionEndpoint}
          MessageBroker__Provider: ${MessageBroker__Provider}
          MessageBroker__RabbitMQ__HostName: ${MessageBroker__RabbitMQ__HostName}
          MessageBroker__Kafka__BootstrapServers: ${MessageBroker__Kafka__BootstrapServers}
          MessageBroker__AzureQueue__ConnectionString: ${MessageBroker__AzureQueue__ConnectionString}
    webmvc:
        image: classifiedads.webmvc
        build:
          context: .
          dockerfile: ./ClassifiedAds.WebMVC/Dockerfile
        ports:
            - "9003:80"
        depends_on:
          - db
          - migrator
          - rabbitmq
          - kafka
          - identityserver
          - webapi
          - notificationserver
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: ${ConnectionStrings__ClassifiedAds}
          CookiePolicyOptions__IsEnabled: "true"
          CookiePolicyOptions__MinimumSameSitePolicy: "Lax"
          CookiePolicyOptions__Secure: "None"          
          CheckDependency__Enabled: "true"
          CheckDependency__Host: "migrator:80"
          OpenIdConnect__Authority: "http://host.docker.internal:9000"
          OpenIdConnect__RequireHttpsMetadata: "false"
          ResourceServer__Endpoint: ${ResourceServer__Endpoint}
          ResourceServer__PublicEndpoint: ${ResourceServer__PublicEndpoint}
          NotificationServer__Endpoint: ${NotificationServer__Endpoint}
          NotificationServer__PublicEndpoint: ${NotificationServer__PublicEndpoint}
          BackgroundServer__Endpoint: ${BackgroundServer__Endpoint}
          CurrentUrl: "http://host.docker.internal:9003"
          Storage__Provider: ${Storage__Provider}
          Storage__Local__Path: ${Storage__Local__Path}
          Storage__Azure__ConnectionString: ${Storage__Azure__ConnectionString}
          Storage__Azure__Container: ${Storage__Azure__Container}
          Storage__Amazon__AccessKeyID: ${Storage__Amazon__AccessKeyID}
          Storage__Amazon__SecretAccessKey: ${Storage__Amazon__SecretAccessKey}
          Storage__Amazon__BucketName: ${Storage__Amazon__BucketName}
          Storage__Amazon__RegionEndpoint: ${Storage__Amazon__RegionEndpoint}
          MessageBroker__Provider: ${MessageBroker__Provider}
          MessageBroker__RabbitMQ__HostName: ${MessageBroker__RabbitMQ__HostName}
          MessageBroker__Kafka__BootstrapServers: ${MessageBroker__Kafka__BootstrapServers}
          MessageBroker__AzureQueue__ConnectionString: ${MessageBroker__AzureQueue__ConnectionString}
    blazor:
        image: classifiedads.blazor
        build:
          context: .
          dockerfile: ./ClassifiedAds.BlazorServerSide/Dockerfile
        ports:
            - "9008:80"
        depends_on:
          - identityserver
          - webapi
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          OpenIdConnect__Authority: "http://host.docker.internal:9000"
          OpenIdConnect__RequireHttpsMetadata: "false"
          ResourceServer__Endpoint: ${ResourceServer__Endpoint}
          ResourceServer__PublicEndpoint: ${ResourceServer__PublicEndpoint}
          CookiePolicyOptions__IsEnabled: "true"
          CookiePolicyOptions__MinimumSameSitePolicy: "Lax"
          CookiePolicyOptions__Secure: "None" 
    backgroundserver:
        image: classifiedads.backgroundserver
        build:
          context: .
          dockerfile: ./ClassifiedAds.BackgroundServer/Dockerfile
        ports:
            - "9004:80"
        depends_on:
          - db
          - migrator
          - rabbitmq
          - mailhog
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: ${ConnectionStrings__ClassifiedAds}
          CheckDependency__Enabled: "true"
          CheckDependency__Host: "migrator:80,rabbitmq:5672"
          MessageBroker__Provider: ${MessageBroker__Provider}
          MessageBroker__RabbitMQ__HostName: ${MessageBroker__RabbitMQ__HostName}
          MessageBroker__Kafka__BootstrapServers: ${MessageBroker__Kafka__BootstrapServers}
          MessageBroker__AzureQueue__ConnectionString: ${MessageBroker__AzureQueue__ConnectionString}
          Notification__Email__Provider: "SmtpClient"
          Notification__Email__SmtpClient__Host: "mailhog"
          Notification__Email__SmtpClient__Port: "1025"
          Notification__Sms__Provider: "Fake"
          Notification__Sms__Twilio__AccountSId: ""
          Notification__Sms__Twilio__AuthToken: ""
          Notification__Sms__Twilio__FromNumber: ""
          Notification__Web__Provider: "Fake"
          Notification__Web__SignalR__Endpoint: ${NotificationServer__Endpoint}
    graphql:
        image: classifiedads.graphql
        build:
          context: .
          dockerfile: ./ClassifiedAds.GraphQL/Dockerfile
        ports:
            - "9006:80"
        depends_on:
          - webapi
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ResourceServer__Endpoint: ${ResourceServer__Endpoint}
          ResourceServer__PublicEndpoint: ${ResourceServer__PublicEndpoint}
